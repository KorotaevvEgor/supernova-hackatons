# Generated by Django 5.2.6 on 2025-09-22 18:30

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('projects', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MaterialType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название материала')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='Код материала')),
                ('unit', models.CharField(max_length=20, verbose_name='Единица измерения')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('quality_requirements', models.TextField(blank=True, verbose_name='Требования к качеству')),
            ],
            options={
                'verbose_name': 'Тип материала',
                'verbose_name_plural': 'Типы материалов',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DocumentPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo_type', models.CharField(choices=[('ttn_main', 'Основная страница ТТН'), ('ttn_additional', 'Дополнительная страница ТТН'), ('quality_certificate', 'Сертификат качества'), ('passport_material', 'Паспорт материала'), ('invoice', 'Счет-фактура'), ('other', 'Другой документ')], default='ttn_main', max_length=20, verbose_name='Тип документа')),
                ('image', models.FileField(help_text='Поддерживаются форматы: JPG, PNG, PDF', upload_to='transport_documents/%Y/%m/%d/', verbose_name='Файл документа')),
                ('file_size', models.PositiveIntegerField(blank=True, null=True, verbose_name='Размер файла (байт)')),
                ('image_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Ширина изображения')),
                ('image_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Высота изображения')),
                ('file_type', models.CharField(blank=True, help_text='Определяется автоматически по расширению', max_length=10, verbose_name='Тип файла')),
                ('pages_count', models.PositiveIntegerField(blank=True, help_text='Для PDF документов', null=True, verbose_name='Количество страниц')),
                ('ocr_text', models.TextField(blank=True, verbose_name='Распознанный текст')),
                ('ocr_confidence', models.FloatField(blank=True, help_text='Средняя уверенность распознавания текста на изображении', null=True, verbose_name='Уверенность распознавания (%)')),
                ('processing_status', models.CharField(choices=[('uploaded', 'Загружено'), ('processing', 'Обрабатывается'), ('processed', 'Обработано'), ('error', 'Ошибка обработки')], default='uploaded', max_length=20, verbose_name='Статус обработки')),
                ('processing_error', models.TextField(blank=True, help_text='Подробное описание ошибки, если обработка не удалась', verbose_name='Ошибка обработки')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='Загружено')),
                ('processed_at', models.DateTimeField(blank=True, null=True, verbose_name='Обработано')),
                ('uploaded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Загрузил')),
            ],
            options={
                'verbose_name': 'Фотография документа',
                'verbose_name_plural': 'Фотографии документов',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='MaterialDelivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('supplier', models.CharField(max_length=255, verbose_name='Поставщик')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Количество')),
                ('delivery_date', models.DateTimeField(verbose_name='Дата и время поставки')),
                ('status', models.CharField(choices=[('pending', 'Ожидается'), ('delivered', 'Доставлено'), ('accepted', 'Принято'), ('rejected', 'Отклонено'), ('quality_control', 'На контроле качества')], default='pending', max_length=20, verbose_name='Статус')),
                ('ttn_number', models.CharField(max_length=100, verbose_name='Номер ТТН')),
                ('ttn_image', models.ImageField(upload_to='ttn_images/', verbose_name='Фото ТТН')),
                ('quality_certificate', models.FileField(blank=True, null=True, upload_to='quality_certificates/', verbose_name='Паспорт качества')),
                ('quality_certificate_image', models.ImageField(blank=True, null=True, upload_to='quality_cert_images/', verbose_name='Фото паспорта качества')),
                ('location', models.CharField(blank=True, help_text="Координаты в формате 'lat,lng'", max_length=100, null=True, verbose_name='Место приемки')),
                ('notes', models.TextField(blank=True, verbose_name='Примечания')),
                ('ocr_recognized_data', models.JSONField(blank=True, null=True, verbose_name='Распознанные данные OCR')),
                ('ocr_confidence', models.FloatField(blank=True, null=True, verbose_name='Уверенность распознавания')),
                ('manual_entry', models.BooleanField(default=False, verbose_name='Ручной ввод')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='material_deliveries', to='projects.project', verbose_name='Объект')),
                ('received_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='received_materials', to=settings.AUTH_USER_MODEL, verbose_name='Принял')),
                ('spec_row', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deliveries', to='projects.workspecrow', verbose_name='Строка спецификации')),
                ('material_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='materials.materialtype', verbose_name='Тип материала')),
            ],
            options={
                'verbose_name': 'Поставка материала',
                'verbose_name_plural': 'Поставки материалов',
                'ordering': ['-delivery_date'],
            },
        ),
        migrations.CreateModel(
            name='MaterialQualityControl',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('control_date', models.DateTimeField(verbose_name='Дата контроля')),
                ('status', models.CharField(choices=[('scheduled', 'Запланирован'), ('in_progress', 'В процессе'), ('completed', 'Завершен'), ('failed', 'Не прошел')], default='scheduled', max_length=20, verbose_name='Статус контроля')),
                ('test_results', models.JSONField(blank=True, null=True, verbose_name='Результаты испытаний')),
                ('laboratory_report', models.FileField(blank=True, null=True, upload_to='lab_reports/', verbose_name='Отчет лаборатории')),
                ('photos', models.JSONField(blank=True, null=True, verbose_name='Фотографии образцов')),
                ('conclusion', models.TextField(verbose_name='Заключение')),
                ('recommendations', models.TextField(blank=True, verbose_name='Рекомендации')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('inspector', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='quality_inspections', to=settings.AUTH_USER_MODEL, verbose_name='Инспектор')),
                ('material_delivery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quality_controls', to='materials.materialdelivery', verbose_name='Поставка материала')),
            ],
            options={
                'verbose_name': 'Контроль качества материала',
                'verbose_name_plural': 'Контроль качества материалов',
                'ordering': ['-control_date'],
            },
        ),
        migrations.CreateModel(
            name='OCRResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('extracted_fields', models.JSONField(default=dict, help_text='Структурированные данные, извлеченные из документа', verbose_name='Извлеченные поля')),
                ('text_coordinates', models.JSONField(default=dict, help_text='Координаты найденных текстовых блоков на изображении', verbose_name='Координаты текста')),
                ('overall_confidence', models.FloatField(blank=True, help_text='Средняя уверенность распознавания всех полей', null=True, verbose_name='Общая уверенность (%)')),
                ('field_confidences', models.JSONField(default=dict, help_text='Уверенность распознавания для каждого поля отдельно', verbose_name='Уверенность по полям')),
                ('validation_status', models.CharField(choices=[('pending', 'Ожидает проверки'), ('valid', 'Данные корректны'), ('invalid', 'Данные некорректны'), ('partial', 'Частично корректны')], default='pending', max_length=20, verbose_name='Статус валидации')),
                ('validation_errors', models.JSONField(default=list, help_text='Список найденных ошибок при валидации данных', verbose_name='Ошибки валидации')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('validated_at', models.DateTimeField(blank=True, null=True, verbose_name='Проверено')),
                ('document_photo', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='ocr_result', to='materials.documentphoto', verbose_name='Фотография документа')),
                ('validated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Проверил')),
            ],
            options={
                'verbose_name': 'Результат OCR',
                'verbose_name_plural': 'Результаты OCR',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TransportDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_number', models.CharField(max_length=100, verbose_name='Номер ТТН')),
                ('document_date', models.DateField(verbose_name='Дата ТТН')),
                ('sender_name', models.CharField(max_length=255, verbose_name='Наименование отправителя')),
                ('sender_address', models.TextField(verbose_name='Адрес отправителя')),
                ('sender_inn', models.CharField(blank=True, max_length=12, verbose_name='ИНН отправителя')),
                ('receiver_name', models.CharField(max_length=255, verbose_name='Наименование получателя')),
                ('receiver_address', models.TextField(verbose_name='Адрес получателя')),
                ('receiver_inn', models.CharField(blank=True, max_length=12, verbose_name='ИНН получателя')),
                ('vehicle_number', models.CharField(max_length=20, verbose_name='Номер ТС')),
                ('driver_name', models.CharField(max_length=255, verbose_name='ФИО водителя')),
                ('driver_license_number', models.CharField(blank=True, max_length=20, verbose_name='Номер в/у')),
                ('cargo_description', models.TextField(verbose_name='Описание груза')),
                ('cargo_weight', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Вес груза (кг)')),
                ('cargo_volume', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Объем груза (м³)')),
                ('packages_count', models.IntegerField(blank=True, null=True, verbose_name='Количество мест')),
                ('processing_status', models.CharField(choices=[('uploaded', 'Загружено'), ('processing', 'Обрабатывается'), ('processed', 'Обработано'), ('verified', 'Проверено'), ('error', 'Ошибка обработки')], default='uploaded', max_length=20, verbose_name='Статус обработки')),
                ('ocr_confidence', models.FloatField(blank=True, help_text='Процент уверенности системы распознавания текста', null=True, verbose_name='Уверенность OCR (%)')),
                ('manual_verification_required', models.BooleanField(default=False, verbose_name='Требует ручной проверки')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
                ('delivery', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='transport_document', to='materials.materialdelivery', verbose_name='Поставка')),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Обработал')),
            ],
            options={
                'verbose_name': 'Товарно-транспортная накладная',
                'verbose_name_plural': 'Товарно-транспортные накладные',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='documentphoto',
            name='transport_document',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='materials.transportdocument', verbose_name='ТТН'),
        ),
    ]
