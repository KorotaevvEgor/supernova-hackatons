from django.core.management.base import BaseCommand
from projects.models import Project, WeatherForecast
from projects.views import get_or_create_weather_forecast
from django.utils import timezone


class Command(BaseCommand):
    help = '–û–±–Ω–æ–≤–ª—è–µ—Ç –ø—Ä–æ–≥–Ω–æ–∑—ã –ø–æ–≥–æ–¥—ã –¥–ª—è –≤—Å–µ—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã'

    def add_arguments(self, parser):
        parser.add_argument(
            '--project-id',
            type=int,
            help='ID –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—Å–µ –ø—Ä–æ–µ–∫—Ç—ã)',
        )
        parser.add_argument(
            '--force',
            action='store_true',
            help='–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å –≤—Å–µ –ø—Ä–æ–≥–Ω–æ–∑—ã',
        )

    def handle(self, *args, **options):
        self.stdout.write("=== –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥–Ω–æ–∑–æ–≤ –ø–æ–≥–æ–¥—ã ===")
        
        today = timezone.now().date()
        self.stdout.write(f"–¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞: {today}")
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–æ–µ–∫—Ç—ã –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        if options['project_id']:
            projects = Project.objects.filter(id=options['project_id'])
            if not projects.exists():
                self.stderr.write(f"–ü—Ä–æ–µ–∫—Ç —Å ID {options['project_id']} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return
        else:
            projects = Project.objects.all()
        
        self.stdout.write(f"–û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥–Ω–æ–∑—ã –¥–ª—è {projects.count()} –ø—Ä–æ–µ–∫—Ç–æ–≤...")
        
        updated_count = 0
        
        for project in projects:
            self.stdout.write(f"\nüìç –ü—Ä–æ–µ–∫—Ç: {project.name} (ID: {project.id})")
            
            if options['force']:
                # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É–¥–∞–ª—è–µ–º –≤—Å–µ —Å—Ç–∞—Ä—ã–µ –ø—Ä–æ–≥–Ω–æ–∑—ã
                old_count = WeatherForecast.objects.filter(project=project).count()
                WeatherForecast.objects.filter(project=project).delete()
                self.stdout.write(f"  –£–¥–∞–ª–µ–Ω–æ {old_count} —Å—Ç–∞—Ä—ã—Ö –ø—Ä–æ–≥–Ω–æ–∑–æ–≤")
            
            # –°–æ–∑–¥–∞–µ–º/–æ–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥–Ω–æ–∑
            forecasts = get_or_create_weather_forecast(project)
            
            self.stdout.write(f"  ‚úÖ –°–æ–∑–¥–∞–Ω–æ {len(forecasts)} –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–≥–Ω–æ–∑–æ–≤")
            self.stdout.write(f"  üìÖ –ü–µ—Ä–∏–æ–¥: {forecasts[0].forecast_date} - {forecasts[-1].forecast_date}")
            
            updated_count += 1
        
        self.stdout.write(
            self.style.SUCCESS(f"\nüéâ –û–±–Ω–æ–≤–ª–µ–Ω–æ –ø—Ä–æ–≥–Ω–æ–∑–æ–≤ –¥–ª—è {updated_count} –ø—Ä–æ–µ–∫—Ç–æ–≤")
        )
        self.stdout.write("–í—Å–µ –ø—Ä–æ–≥–Ω–æ–∑—ã —Ç–µ–ø–µ—Ä—å –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã!")
