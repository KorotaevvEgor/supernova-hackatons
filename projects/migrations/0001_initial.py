# Generated by Django 5.2.6 on 2025-09-22 18:30

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='WorkType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название типа работ')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='Код работ')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Тип работ',
                'verbose_name_plural': 'Типы работ',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок замечания')),
                ('description', models.TextField(verbose_name='Описание замечания')),
                ('status', models.CharField(choices=[('pending', 'На рассмотрении'), ('accepted', 'Принято к исполнению'), ('rejected', 'Отклонено'), ('resolved', 'Устранено')], default='pending', max_length=20, verbose_name='Статус')),
                ('priority', models.CharField(choices=[('low', 'Низкий'), ('medium', 'Средний'), ('high', 'Высокий'), ('critical', 'Критический')], default='medium', max_length=20, verbose_name='Приоритет')),
                ('location_lat', models.FloatField(help_text='GPS координата при создании замечания', verbose_name='Широта местоположения')),
                ('location_lng', models.FloatField(help_text='GPS координата при создании замечания', verbose_name='Долгота местоположения')),
                ('created_at_location', models.BooleanField(default=False, help_text='Подтверждение нахождения на объекте при создании', verbose_name='Создано на объекте')),
                ('due_date', models.DateField(blank=True, null=True, verbose_name='Срок устранения')),
                ('resolved_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата устранения')),
                ('response_comment', models.TextField(blank=True, verbose_name='Комментарий к ответу')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assigned_comments', to=settings.AUTH_USER_MODEL, verbose_name='Ответственный за устранение')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_comments', to=settings.AUTH_USER_MODEL, verbose_name='Создал замечание')),
            ],
            options={
                'verbose_name': 'Замечание',
                'verbose_name_plural': 'Замечания',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CommentPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='comment_photos/', verbose_name='Фото')),
                ('description', models.CharField(blank=True, max_length=255, verbose_name='Описание фото')),
                ('is_before', models.BooleanField(default=True, help_text='True - фото проблемы, False - фото после устранения', verbose_name='Фото до устранения')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='projects.comment', verbose_name='Замечание')),
                ('taken_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Автор фото')),
            ],
            options={
                'verbose_name': 'Фото замечания',
                'verbose_name_plural': 'Фото замечаний',
                'ordering': ['is_before', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CommentStatusChange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_status', models.CharField(max_length=20, verbose_name='Предыдущий статус')),
                ('to_status', models.CharField(max_length=20, verbose_name='Новый статус')),
                ('reason', models.TextField(blank=True, verbose_name='Причина изменения')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('changed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Изменил статус')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_changes', to='projects.comment', verbose_name='Замечание')),
            ],
            options={
                'verbose_name': 'Изменение статуса замечания',
                'verbose_name_plural': 'Изменения статусов замечаний',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название объекта')),
                ('address', models.CharField(max_length=500, verbose_name='Адрес')),
                ('coordinates', models.TextField(blank=True, help_text='JSON с координатами полигона', verbose_name='Координаты полигона')),
                ('status', models.CharField(choices=[('planned', 'Запланирован'), ('active', 'Активен'), ('completed', 'Завершен'), ('suspended', 'Приостановлен')], default='planned', max_length=20, verbose_name='Статус')),
                ('contract_number', models.CharField(max_length=100, verbose_name='Номер контракта')),
                ('planned_start_date', models.DateField(verbose_name='Плановая дата начала')),
                ('planned_end_date', models.DateField(verbose_name='Плановая дата завершения')),
                ('actual_start_date', models.DateField(blank=True, null=True, verbose_name='Фактическая дата начала')),
                ('actual_end_date', models.DateField(blank=True, null=True, verbose_name='Фактическая дата завершения')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('opening_act', models.FileField(blank=True, null=True, upload_to='opening_acts/', verbose_name='Акт открытия объекта')),
                ('opening_checklist_completed', models.BooleanField(default=False, verbose_name='Чек-лист открытия заполнен')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('control_service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='controlled_projects', to=settings.AUTH_USER_MODEL, verbose_name='Ответственный от стройконтроля')),
                ('foreman', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='managed_projects', to=settings.AUTH_USER_MODEL, verbose_name='Ответственный прораб')),
            ],
            options={
                'verbose_name': 'Объект благоустройства',
                'verbose_name_plural': 'Объекты благоустройства',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='comment',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='projects.project', verbose_name='Проект'),
        ),
        migrations.CreateModel(
            name='ProjectInspection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inspection_type', models.CharField(choices=[('quality', 'Контроль качества'), ('safety', 'Контроль безопасности'), ('compliance', 'Соответствие нормам'), ('final', 'Окончательная приемка')], max_length=20, verbose_name='Тип проверки')),
                ('status', models.CharField(choices=[('scheduled', 'Запланировано'), ('in_progress', 'В процессе'), ('completed', 'Завершено'), ('cancelled', 'Отменено')], default='scheduled', max_length=20, verbose_name='Статус')),
                ('scheduled_date', models.DateTimeField(verbose_name='Плановая дата')),
                ('completed_date', models.DateTimeField(blank=True, null=True, verbose_name='Фактическая дата')),
                ('areas_to_check', models.JSONField(blank=True, default=list, verbose_name='Области контроля')),
                ('notes', models.TextField(blank=True, verbose_name='Примечания')),
                ('result', models.CharField(blank=True, choices=[('passed', 'Пройдено'), ('failed', 'Не пройдено'), ('partial', 'Частично')], max_length=20, null=True, verbose_name='Результат')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('inspector', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inspections', to=settings.AUTH_USER_MODEL, verbose_name='Инспектор')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inspections', to='projects.project', verbose_name='Проект')),
            ],
            options={
                'verbose_name': 'Проверка проекта',
                'verbose_name_plural': 'Проверки проектов',
                'ordering': ['-scheduled_date'],
            },
        ),
        migrations.CreateModel(
            name='ProjectTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название задачи')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('priority', models.CharField(choices=[('low', 'Низкий'), ('medium', 'Средний'), ('high', 'Высокий'), ('critical', 'Критический')], default='medium', max_length=20, verbose_name='Приоритет')),
                ('status', models.CharField(choices=[('pending', 'Ожидает'), ('in_progress', 'В процессе'), ('completed', 'Выполнено'), ('verified', 'Проверено'), ('cancelled', 'Отменено')], default='pending', max_length=20, verbose_name='Статус')),
                ('due_date', models.DateTimeField(blank=True, null=True, verbose_name='Крайний срок')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата выполнения')),
                ('location_required', models.BooleanField(default=False, verbose_name='Требуется геолокация')),
                ('location_lat', models.FloatField(blank=True, null=True, verbose_name='Широта')),
                ('location_lng', models.FloatField(blank=True, null=True, verbose_name='Долгота')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_tasks', to=settings.AUTH_USER_MODEL, verbose_name='Ответственный')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_tasks', to=settings.AUTH_USER_MODEL, verbose_name='Создатель')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='projects.project', verbose_name='Проект')),
            ],
            options={
                'verbose_name': 'Задача',
                'verbose_name_plural': 'Задачи',
                'ordering': ['-priority', 'due_date'],
            },
        ),
        migrations.CreateModel(
            name='TaskPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='task_photos/', verbose_name='Фото')),
                ('description', models.CharField(blank=True, max_length=255, verbose_name='Описание')),
                ('location_lat', models.FloatField(blank=True, null=True, verbose_name='Широта')),
                ('location_lng', models.FloatField(blank=True, null=True, verbose_name='Долгота')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('taken_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Автор фото')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='projects.projecttask', verbose_name='Задача')),
            ],
            options={
                'verbose_name': 'Фото задачи',
                'verbose_name_plural': 'Фото задач',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Work',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название работ')),
                ('status', models.CharField(choices=[('not_started', 'Не начата'), ('in_progress', 'В процессе'), ('completed', 'Завершена'), ('verified', 'Проверена'), ('suspended', 'Приостановлена')], default='not_started', max_length=20, verbose_name='Статус')),
                ('planned_start_date', models.DateField(verbose_name='Плановая дата начала')),
                ('planned_end_date', models.DateField(verbose_name='Плановая дата завершения')),
                ('actual_start_date', models.DateField(blank=True, null=True, verbose_name='Фактическая дата начала')),
                ('actual_end_date', models.DateField(blank=True, null=True, verbose_name='Фактическая дата завершения')),
                ('volume', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Объем работ')),
                ('unit', models.CharField(max_length=20, verbose_name='Единица измерения')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('reported_by_foreman', models.BooleanField(default=False, verbose_name='Отмечено прорабом как выполнено')),
                ('verified_by_control', models.BooleanField(default=False, verbose_name='Подтверждено стройконтролем')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='works', to='projects.project', verbose_name='Объект')),
                ('work_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='works', to='projects.worktype', verbose_name='Тип работ')),
            ],
            options={
                'verbose_name': 'Работа',
                'verbose_name_plural': 'Работы',
                'ordering': ['planned_start_date'],
            },
        ),
        migrations.CreateModel(
            name='ScheduleChange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('previous_start_date', models.DateField(verbose_name='Предыдущая дата начала')),
                ('previous_end_date', models.DateField(verbose_name='Предыдущая дата окончания')),
                ('new_start_date', models.DateField(verbose_name='Новая дата начала')),
                ('new_end_date', models.DateField(verbose_name='Новая дата окончания')),
                ('reason', models.TextField(verbose_name='Причина изменения')),
                ('status', models.CharField(choices=[('pending', 'На рассмотрении'), ('approved', 'Одобрено'), ('rejected', 'Отклонено')], default='pending', max_length=20, verbose_name='Статус')),
                ('comment', models.TextField(blank=True, verbose_name='Комментарий')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requested_changes', to=settings.AUTH_USER_MODEL, verbose_name='Инициатор изменения')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_changes', to=settings.AUTH_USER_MODEL, verbose_name='Рассмотрено')),
                ('work', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedule_changes', to='projects.work', verbose_name='Работа')),
            ],
            options={
                'verbose_name': 'Изменение графика',
                'verbose_name_plural': 'Изменения графика',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='comment',
            name='work',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='projects.work', verbose_name='Связанная работа'),
        ),
        migrations.CreateModel(
            name='WorkflowTransition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_status', models.CharField(max_length=50, verbose_name='Из статуса')),
                ('to_status', models.CharField(max_length=50, verbose_name='В статус')),
                ('reason', models.TextField(blank=True, verbose_name='Причина')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('performed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Выполнил')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workflow_transitions', to='projects.project', verbose_name='Проект')),
            ],
            options={
                'verbose_name': 'Переход workflow',
                'verbose_name_plural': 'Переходы workflow',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WorkSpecRow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=100, verbose_name='Код работ/материала')),
                ('name', models.CharField(max_length=500, verbose_name='Наименование')),
                ('unit', models.CharField(blank=True, max_length=20, verbose_name='Единица измерения')),
                ('planned_volume', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Плановый объем')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='work_spec_rows', to='projects.project', verbose_name='Проект')),
            ],
            options={
                'verbose_name': 'Строка спецификации',
                'verbose_name_plural': 'Строки спецификации',
                'ordering': ['project', 'order', 'name'],
                'unique_together': {('project', 'code', 'name')},
            },
        ),
    ]
