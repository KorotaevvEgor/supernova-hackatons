# Generated by Django 5.2.6 on 2025-09-22 18:30

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('materials', '0001_initial'),
        ('projects', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ViolationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, unique=True, verbose_name='Код нарушения')),
                ('name', models.CharField(max_length=255, verbose_name='Наименование')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('severity', models.CharField(choices=[('low', 'Низкая'), ('medium', 'Средняя'), ('high', 'Высокая'), ('critical', 'Критическая')], default='medium', max_length=20, verbose_name='Серьёзность')),
                ('mandatory_photo', models.BooleanField(default=False, verbose_name='Обязательно фото')),
                ('mandatory_location', models.BooleanField(default=True, verbose_name='Обязательна геолокация')),
                ('default_deadline_days', models.IntegerField(default=30, verbose_name='Срок устранения по умолчанию (дни)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Тип нарушения',
                'verbose_name_plural': 'Типы нарушений',
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='InspectorViolation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Краткое описание')),
                ('description', models.TextField(verbose_name='Детальное описание')),
                ('status', models.CharField(choices=[('detected', 'Выявлено'), ('notified', 'Уведомлено'), ('in_correction', 'На устранении'), ('corrected', 'Устранено'), ('verified', 'Проверено'), ('closed', 'Закрыто')], default='detected', max_length=20, verbose_name='Статус')),
                ('priority', models.CharField(choices=[('low', 'Низкий'), ('medium', 'Средний'), ('high', 'Высокий'), ('critical', 'Критический')], default='medium', max_length=20, verbose_name='Приоритет')),
                ('location_lat', models.FloatField(blank=True, null=True, verbose_name='Широта')),
                ('location_lng', models.FloatField(blank=True, null=True, verbose_name='Долгота')),
                ('location_description', models.CharField(blank=True, max_length=500, verbose_name='Описание места')),
                ('detected_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Время обнаружения')),
                ('deadline', models.DateField(verbose_name='Срок устранения')),
                ('corrected_at', models.DateTimeField(blank=True, null=True, verbose_name='Время устранения')),
                ('verified_at', models.DateTimeField(blank=True, null=True, verbose_name='Время проверки')),
                ('correction_comment', models.TextField(blank=True, verbose_name='Комментарий об устранении')),
                ('inspector_comment', models.TextField(blank=True, verbose_name='Комментарий инспектора при проверке')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_inspector_violations', to=settings.AUTH_USER_MODEL, verbose_name='Ответственный за устранение')),
                ('inspector', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='detected_violations', to=settings.AUTH_USER_MODEL, verbose_name='Инспектор')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inspector_violations', to='projects.project', verbose_name='Проект')),
                ('violation_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='violations', to='inspector.violationtype', verbose_name='Тип нарушения')),
            ],
            options={
                'verbose_name': 'Нарушение инспектора',
                'verbose_name_plural': 'Нарушения инспектора',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LabSampleRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('requested', 'Запрошено'), ('scheduled', 'Запланировано'), ('sampling', 'Отбор проб'), ('testing', 'Тестирование'), ('completed', 'Завершено'), ('cancelled', 'Отменено')], default='requested', max_length=20, verbose_name='Статус')),
                ('urgency', models.CharField(choices=[('normal', 'Обычная'), ('urgent', 'Срочная'), ('critical', 'Критическая')], default='normal', max_length=20, verbose_name='Срочность')),
                ('reason', models.TextField(verbose_name='Причина отбора проб')),
                ('required_tests', models.TextField(help_text='Перечень необходимых лабораторных анализов', verbose_name='Требуемые анализы')),
                ('sample_quantity', models.CharField(help_text="Например: '3 образца по 1кг'", max_length=100, verbose_name='Количество образцов')),
                ('sampling_location_lat', models.FloatField(blank=True, null=True, verbose_name='Широта места отбора')),
                ('sampling_location_lng', models.FloatField(blank=True, null=True, verbose_name='Долгота места отбора')),
                ('sampling_location_description', models.CharField(max_length=500, verbose_name='Описание места отбора')),
                ('requested_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Время заявки')),
                ('scheduled_sampling_date', models.DateTimeField(blank=True, null=True, verbose_name='Запланированная дата отбора')),
                ('actual_sampling_date', models.DateTimeField(blank=True, null=True, verbose_name='Фактическая дата отбора')),
                ('expected_results_date', models.DateField(blank=True, null=True, verbose_name='Ожидаемая дата результатов')),
                ('lab_organization', models.CharField(blank=True, max_length=255, verbose_name='Лаборатория')),
                ('lab_contact', models.CharField(blank=True, max_length=255, verbose_name='Контакт лаборатории')),
                ('sampling_specialist', models.CharField(blank=True, max_length=255, verbose_name='Специалист по отбору проб')),
                ('results_summary', models.TextField(blank=True, verbose_name='Краткая сводка результатов')),
                ('results_file', models.FileField(blank=True, null=True, upload_to='lab_results/', verbose_name='Файл с результатами')),
                ('compliance_status', models.CharField(blank=True, help_text='Соответствует/Не соответствует нормам', max_length=50, verbose_name='Статус соответствия')),
                ('inspector_notes', models.TextField(blank=True, verbose_name='Примечания инспектора')),
                ('lab_notes', models.TextField(blank=True, verbose_name='Примечания лаборатории')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('material_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='lab_requests', to='materials.materialtype', verbose_name='Тип материала')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lab_sample_requests', to='projects.project', verbose_name='Проект')),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requested_samples', to=settings.AUTH_USER_MODEL, verbose_name='Заявитель')),
            ],
            options={
                'verbose_name': 'Заявка на лабораторные пробы',
                'verbose_name_plural': 'Заявки на лабораторные пробы',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProjectActivationApproval',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'На рассмотрении'), ('approved', 'Одобрено'), ('rejected', 'Отклонено'), ('conditional', 'Условно одобрено')], default='pending', max_length=20, verbose_name='Статус')),
                ('site_preparation_checked', models.BooleanField(default=False, verbose_name='Подготовка площадки проверена')),
                ('safety_measures_checked', models.BooleanField(default=False, verbose_name='Меры безопасности проверены')),
                ('documentation_checked', models.BooleanField(default=False, verbose_name='Документация проверена')),
                ('environmental_compliance_checked', models.BooleanField(default=False, verbose_name='Экологические требования проверены')),
                ('inspector_conclusion', models.TextField(verbose_name='Заключение инспектора')),
                ('conditions', models.TextField(blank=True, help_text='Условия, которые должны быть выполнены', verbose_name='Условия одобрения')),
                ('rejection_reason', models.TextField(blank=True, verbose_name='Причина отклонения')),
                ('inspection_date', models.DateTimeField(verbose_name='Дата осмотра')),
                ('decision_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата решения')),
                ('valid_until', models.DateField(blank=True, null=True, verbose_name='Действительно до')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('inspector', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_approvals', to=settings.AUTH_USER_MODEL, verbose_name='Инспектор')),
                ('project', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='activation_approval', to='projects.project', verbose_name='Проект')),
            ],
            options={
                'verbose_name': 'Одобрение активации проекта',
                'verbose_name_plural': 'Одобрения активации проектов',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ViolationPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='violation_photos/', verbose_name='Фотография')),
                ('photo_type', models.CharField(choices=[('violation', 'Фото нарушения'), ('correction', 'Фото устранения'), ('verification', 'Фото проверки')], default='violation', max_length=20, verbose_name='Тип фото')),
                ('description', models.CharField(blank=True, max_length=255, verbose_name='Описание')),
                ('taken_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Время съёмки')),
                ('location_lat', models.FloatField(blank=True, null=True, verbose_name='Широта')),
                ('location_lng', models.FloatField(blank=True, null=True, verbose_name='Долгота')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('taken_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Автор фото')),
                ('violation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='inspector.inspectorviolation', verbose_name='Нарушение')),
            ],
            options={
                'verbose_name': 'Фото нарушения',
                'verbose_name_plural': 'Фото нарушений',
                'ordering': ['-created_at'],
            },
        ),
    ]
