#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–ø–ª–æ—è Urban Construction Control System
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/deploy.sh [production|staging]

set -e  # –í—ã—Ö–æ–¥ –ø—Ä–∏ –ª—é–±–æ–π –æ—à–∏–±–∫–µ

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
ENVIRONMENT=${1:-staging}

echo -e "${BLUE}üöÄ –ù–∞—á–∏–Ω–∞—é –¥–µ–ø–ª–æ–π Urban Construction Control System –¥–ª—è –æ–∫—Ä—É–∂–µ–Ω–∏—è: ${ENVIRONMENT}${NC}"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤
if [ ! -f ".env.${ENVIRONMENT}" ]; then
    echo -e "${RED}‚ùå –§–∞–π–ª .env.${ENVIRONMENT} –Ω–µ –Ω–∞–π–¥–µ–Ω!${NC}"
    echo -e "${YELLOW}–°–æ–∑–¥–∞–π—Ç–µ .env.${ENVIRONMENT} —Ñ–∞–π–ª –Ω–∞ –æ—Å–Ω–æ–≤–µ .env.example${NC}"
    exit 1
fi

if [ ! -f "docker-compose.yml" ]; then
    echo -e "${RED}‚ùå –§–∞–π–ª docker-compose.yml –Ω–µ –Ω–∞–π–¥–µ–Ω!${NC}"
    exit 1
fi

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥ —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
run_command() {
    echo -e "${BLUE}‚û§ –í—ã–ø–æ–ª–Ω—è—é: $1${NC}"
    eval $1
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}‚úÖ –£—Å–ø–µ—à–Ω–æ: $1${NC}"
    else
        echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ: $1${NC}"
        exit 1
    fi
}

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
export $(grep -v '^#' .env.${ENVIRONMENT} | xargs)

echo -e "${YELLOW}üìã –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–µ–ø–ª–æ—è:${NC}"
echo -e "Environment: ${ENVIRONMENT}"
echo -e "DEBUG: ${DEBUG:-Not set}"
echo -e "ALLOWED_HOSTS: ${ALLOWED_HOSTS:-Not set}"

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ —É–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo -e "\n${YELLOW}üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...${NC}"
run_command "docker-compose down --volumes --remove-orphans"

# –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ (–µ—Å–ª–∏ —ç—Ç–æ –ø—Ä–æ–¥–∞–∫—à–Ω)
if [ "$ENVIRONMENT" = "production" ]; then
    echo -e "\n${YELLOW}üíæ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...${NC}"
    BACKUP_FILE="backup_$(date +%Y%m%d_%H%M%S).sql"
    run_command "docker-compose exec -T db pg_dump -U \${POSTGRES_USER:-urban_user} \${POSTGRES_DB:-urban_system} > backups/${BACKUP_FILE}" || true
    echo -e "${GREEN}üíæ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ backups/${BACKUP_FILE}${NC}"
fi

# –°–±–æ—Ä–∫–∞ –Ω–æ–≤—ã—Ö –æ–±—Ä–∞–∑–æ–≤
echo -e "\n${YELLOW}üèóÔ∏è  –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤...${NC}"
run_command "docker-compose build --no-cache"

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
echo -e "\n${YELLOW}üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤...${NC}"
if [ "$ENVIRONMENT" = "production" ]; then
    run_command "docker-compose --profile production up -d"
else
    run_command "docker-compose up -d"
fi

# –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
echo -e "\n${YELLOW}‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...${NC}"
sleep 10

# –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π
echo -e "\n${YELLOW}üóÉÔ∏è  –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...${NC}"
run_command "docker-compose exec web python manage.py migrate"

# –°–æ–∑–¥–∞–Ω–∏–µ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ç–æ–ª—å–∫–æ –¥–ª—è staging)
if [ "$ENVIRONMENT" = "staging" ]; then
    echo -e "\n${YELLOW}üë§ –°–æ–∑–¥–∞–Ω–∏–µ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...${NC}"
    run_command "docker-compose exec web python manage.py shell -c \"
from django.contrib.auth import get_user_model
User = get_user_model()
if not User.objects.filter(username='admin').exists():
    User.objects.create_superuser('admin', 'admin@example.com', 'admin123')
    print('–°—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω: admin/admin123')
else:
    print('–°—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')
\"" || true
fi

# –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∏–∫—Å—Ç—É—Ä (—Ç–æ–ª—å–∫–æ –¥–ª—è staging/dev)
if [ "$ENVIRONMENT" != "production" ]; then
    echo -e "\n${YELLOW}üì¶ –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...${NC}"
    run_command "docker-compose exec web python manage.py loaddata fixtures/all_data.json" || echo -e "${YELLOW}‚ö†Ô∏è  –§–∏–∫—Å—Ç—É—Ä—ã –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã (—ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –∑–∞–ø—É—Å–∫–∞)${NC}"
fi

# –°–±–æ—Ä —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
echo -e "\n${YELLOW}üìÅ –°–±–æ—Ä —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤...${NC}"
run_command "docker-compose exec web python manage.py collectstatic --noinput"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤
echo -e "\n${YELLOW}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤...${NC}"
run_command "docker-compose ps"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
echo -e "\n${YELLOW}üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...${NC}"
sleep 5
if curl -f -s http://localhost:8000/ > /dev/null; then
    echo -e "${GREEN}‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –Ω–∞ http://localhost:8000/${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –µ—â–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç${NC}"
fi

# –í—ã–≤–æ–¥ –ª–æ–≥–æ–≤ (—Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏)
echo -e "\n${YELLOW}üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏:${NC}"
docker-compose logs --tail=10 web

echo -e "\n${GREEN}üéâ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!${NC}"
echo -e "${BLUE}üìå –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:${NC}"
echo -e "  –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤: docker-compose logs -f web"
echo -e "  –û—Å—Ç–∞–Ω–æ–≤–∫–∞: docker-compose down"
echo -e "  –î–æ—Å—Ç—É–ø –∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É: docker-compose exec web bash"
echo -e "  –†–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏: ls -la backups/"

if [ "$ENVIRONMENT" = "staging" ]; then
    echo -e "\n${YELLOW}üë§ –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –∞–¥–º–∏–Ω–∫—É:${NC}"
    echo -e "  URL: http://localhost:8000/admin/"
    echo -e "  –õ–æ–≥–∏–Ω: admin"
    echo -e "  –ü–∞—Ä–æ–ª—å: admin123"
fi