# Generated by Django 5.2.6 on 2025-09-22 20:00

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CheckListTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название')),
                ('form_type', models.CharField(choices=[('opening', 'Форма №1 - Открытие объекта'), ('daily', 'Форма №2 - Ежедневный контроль'), ('quality', 'Форма №3 - Контроль качества')], max_length=20, verbose_name='Тип формы')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Шаблон чек-листа',
                'verbose_name_plural': 'Шаблоны чек-листов',
                'ordering': ['form_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='NetworkSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_name', models.CharField(max_length=200, verbose_name='Объект')),
                ('work_name', models.TextField(verbose_name='Наименование работы')),
                ('kpgz_code', models.CharField(blank=True, max_length=20, verbose_name='Код КПГЗ')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Дата начала')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Дата окончания')),
                ('work_essence', models.CharField(blank=True, max_length=200, verbose_name='Сущность ГПР')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Сетевой график',
                'verbose_name_plural': 'Сетевые графики',
                'ordering': ['object_name', 'start_date'],
            },
        ),
        migrations.CreateModel(
            name='ProjectCoordinates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название объекта')),
                ('address', models.CharField(max_length=300, verbose_name='Адрес')),
                ('wkt_polygon', models.TextField(verbose_name='Полигон WKT')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Координаты объекта',
                'verbose_name_plural': 'Координаты объектов',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TransportDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_number', models.CharField(max_length=50, verbose_name='Номер документа')),
                ('date', models.DateField(verbose_name='Дата документа')),
                ('sender', models.CharField(max_length=300, verbose_name='Грузоотправитель')),
                ('receiver', models.CharField(max_length=300, verbose_name='Грузополучатель')),
                ('material_name', models.CharField(max_length=300, verbose_name='Наименование материала')),
                ('quantity_net', models.FloatField(verbose_name='Нетто, т')),
                ('quantity_gross', models.FloatField(verbose_name='Брутто, т')),
                ('volume', models.FloatField(verbose_name='Объем, м³')),
                ('delivery_address', models.CharField(max_length=300, verbose_name='Адрес доставки')),
                ('transport_number', models.CharField(blank=True, max_length=50, verbose_name='Номер транспорта')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Транспортный документ',
                'verbose_name_plural': 'Транспортные документы',
                'ordering': ['-date', 'document_number'],
            },
        ),
        migrations.CreateModel(
            name='ViolationClassifier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('culture', 'Культура производства'), ('technical', 'Технические нарушения'), ('safety', 'Безопасность'), ('documentation', 'Документооборот')], max_length=20, verbose_name='Категория')),
                ('violation_type', models.CharField(choices=[('fixable', 'Устранимое'), ('serious', 'Грубое'), ('critical', 'Критическое')], max_length=20, verbose_name='Вид')),
                ('severity', models.CharField(default='fixable', max_length=20, verbose_name='Тип')),
                ('name', models.TextField(verbose_name='Наименование нарушения')),
                ('fix_period', models.IntegerField(verbose_name='Регламентный срок устранения (дни)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Классификатор нарушений',
                'verbose_name_plural': 'Классификаторы нарушений',
                'ordering': ['category', 'severity', 'name'],
            },
        ),
        migrations.CreateModel(
            name='WorkSpecification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_name', models.CharField(max_length=200, verbose_name='Объект')),
                ('work_name', models.TextField(verbose_name='Наименование работы')),
                ('quantity', models.FloatField(verbose_name='Количество')),
                ('unit', models.CharField(max_length=50, verbose_name='Единица измерения')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Дата начала')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Дата окончания')),
                ('address', models.CharField(blank=True, max_length=300, verbose_name='Адрес')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Спецификация работ',
                'verbose_name_plural': 'Спецификации работ',
                'ordering': ['object_name', 'work_name'],
            },
        ),
        migrations.CreateModel(
            name='CheckListItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section', models.CharField(max_length=200, verbose_name='Раздел')),
                ('item_number', models.CharField(max_length=10, verbose_name='Номер пункта')),
                ('description', models.TextField(verbose_name='Описание проверки')),
                ('regulatory_document', models.CharField(blank=True, max_length=300, verbose_name='Нормативный документ')),
                ('order', models.IntegerField(default=0, verbose_name='Порядок')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='dataset.checklisttemplate', verbose_name='Шаблон')),
            ],
            options={
                'verbose_name': 'Пункт чек-листа',
                'verbose_name_plural': 'Пункты чек-листа',
                'ordering': ['template', 'order', 'item_number'],
            },
        ),
        migrations.CreateModel(
            name='ViolationPrescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=50, verbose_name='Номер предписания')),
                ('date_issued', models.DateField(verbose_name='Дата выдачи')),
                ('description', models.TextField(verbose_name='Описание выявленного нарушения')),
                ('work_stopped', models.BooleanField(default=False, verbose_name='Остановка работ')),
                ('fix_deadline', models.DateField(verbose_name='Срок устранения')),
                ('actual_fix_date', models.DateField(blank=True, null=True, verbose_name='Фактическая дата устранения')),
                ('status', models.CharField(choices=[('issued', 'Выдано'), ('in_progress', 'В работе'), ('fixed', 'Устранено'), ('not_fixed', 'Не устранено'), ('overdue', 'Просрочено')], default='issued', max_length=20, verbose_name='Статус')),
                ('notes', models.TextField(blank=True, verbose_name='Примечания')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('inspector', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Инспектор')),
                ('violation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataset.violationclassifier', verbose_name='Нарушение')),
            ],
            options={
                'verbose_name': 'Предписание',
                'verbose_name_plural': 'Предписания',
                'ordering': ['-date_issued', 'number'],
            },
        ),
    ]
